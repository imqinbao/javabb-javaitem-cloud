package ${package.Controller};

import ${package.Entity}.${table.entityName};
import ${package.Service}.${table.serviceName};
import ${config.groupId}.common.web.domain.*;
import ${config.groupId}.common.web.controller.BaseController;
import ${config.groupId}.common.annotation.ApiPageParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
#if(${config.needPerm})
import org.springframework.security.access.prepost.PreAuthorize;
#end
#if(${config.needLog})
import ${config.groupId}.common.annotation.OperLog;
#end
#if(${config.swagger})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end

import javax.servlet.http.HttpServletRequest;
import java.util.List;
/**
 * $!{table.comment} Controller控制器
 *
 * @author ${config.author}
 * @since $Util.now()
 */
#if(${config.swagger})
@Api(tags = "$!{table.comment}管理")
#end
@RestController
@RequestMapping("${package.ModuleName}/$Util.lowerFirst(${table.entityName})")
public class ${table.controllerName} extends BaseController {
#set($idFieldName="id")
#set($idFieldType="Integer")
#if(${table.havaPk})
    #foreach($field in ${table.fields})
        #if($field.keyFlag)
            $idFieldName=${field.propertyName}
            $idFieldType=${field.propertyType}
        #end
    #end
#end
#set($authPre=${package.ModuleName}+":"+$Util.lowerFirst(${table.entityName}))
#set($serviceIns=$Util.lowerFirst(${table.serviceName}))
    @Autowired
    private ${table.serviceName} $serviceIns;

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:list')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "分页查询")
#end
#if(${config.swagger})
    @ApiOperation("分页查询$!{table.comment}")
    @ApiPageParam
#end
    @GetMapping("/page")
    public PageResult<${table.entityName}> page(HttpServletRequest request) {
        PageParam<${table.entityName}> pageParam = new PageParam<>(request);
        return new PageResult<>(${serviceIns}.page(pageParam, pageParam.getWrapper()).getRecords(), pageParam.getTotal());
        //return ${serviceIns}.listPage(pageParam);  // 使用关联查询
    }

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:list')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "查询全部")
#end
#if(${config.swagger})
    @ApiOperation("查询全部$!{table.comment}")
#end
    @GetMapping()
    public AjaxResult list(HttpServletRequest request) {
        PageParam<${table.entityName}> pageParam = new PageParam<>(request);
        return AjaxResult.ok().setData(${serviceIns}.list(pageParam.getOrderWrapper()));
        //List<${table.entityName}> records = ${serviceIns}.listAll(pageParam.getNoPageParam());  // 使用关联查询
        //return AjaxResult.ok().setData(pageParam.sortRecords(records));
    }
#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:list')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "根据id查询")
#end
#if(${config.swagger})
    @ApiOperation("根据id查询$!{table.comment}")
#end
    @GetMapping("/{id}")
    public AjaxResult get(@PathVariable("id") Integer id) {
        return AjaxResult.ok().setData(${serviceIns}.getById(id));
        // 使用关联查询
        //PageParam<${table.entityName}> pageParam = new PageParam<>();
        //pageParam.put("$!{idFieldName}", id);
        //List<${table.entityName}> records = ${serviceIns}.listAll(pageParam.getNoPageParam());
        //return AjaxResult.ok().setData(pageParam.getOne(records));
    }

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:save')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "添加", param = false, result = true)
#end
#if(${config.swagger})
    @ApiOperation("添加$!{table.comment}")
#end
    @PostMapping()
    public AjaxResult save(@RequestBody ${table.entityName} $Util.lowerFirst(${table.entityName})) {
        if (${serviceIns}.save($Util.lowerFirst(${table.entityName}))) {
            return AjaxResult.ok("添加成功");
        }
        return AjaxResult.error("添加失败");
    }

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:update')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "修改", param = false, result = true)
#end
#if(${config.swagger})
    @ApiOperation("修改$!{table.comment}")
#end
    @PutMapping()
    public AjaxResult update(@RequestBody ${table.entityName} $Util.lowerFirst(${table.entityName})) {
        if (${serviceIns}.updateById($Util.lowerFirst(${table.entityName}))) {
            return AjaxResult.ok("修改成功");
        }
        return AjaxResult.error("修改失败");
    }

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:remove')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "删除", result = true)
#end
#if(${config.swagger})
    @ApiOperation("删除$!{table.comment}")
#end
    @DeleteMapping("/{id}")
    public AjaxResult remove(@PathVariable("id") Integer id) {
        if (${serviceIns}.removeById(id)) {
            return AjaxResult.ok("删除成功");
        }
        return AjaxResult.error("删除失败");
    }

#if(${config.needPerm})
    @PreAuthorize("hasAuthority('${authPre}:remove')")
#end
#if(${config.needLog})
    @OperLog(value = "$!{table.comment}管理", desc = "批量删除", result = true)
#end
#if(${config.swagger})
    @ApiOperation("批量删除$!{table.comment}")
#end
    @DeleteMapping("/batch")
    public AjaxResult removeBatch(@RequestBody List<Integer> ids) {
        if (${serviceIns}.removeByIds(ids)) {
            return AjaxResult.ok("删除成功");
        }
        return AjaxResult.error("删除失败");
    }

}